a) Умный указатель std::unique_ptr

Мой ответ: Когда требуется динамически выделить память для объекта класса с автоматической очисткой
памяти в конце жизни умного указателя. Работает также с динамическими массивами.

Ответ автора: Умный указатель std::unique_ptr следует использовать, когда нужно, чтобы умный
указатель единолично владел динамически выделенным ресурсом.

b) Умный указатель std::shared_ptr

Мой ответ: Умный указатель std::shared_ptr следует использовать тогда, когда нужно, чтобы несколько
умных указателей одновременно владели динамически выделенным ресурсом.

Ответ автора: Умный указатель std::shared_ptr следует использовать, когда нужно, чтобы сразу
несколько умных указателей владело одним динамически выделенным ресурсом. Ресурс не будет
уничтожен до тех пор, пока не будут уничтожены все std::shared_ptr, владеющие им.

c) Умный указатель std::weak_ptr

Мой ответ: Умный указатель std::weak_ptr следует использовать, когда нужно, чтобы умный указатель
знал о существовании динамически выделенного объекта, но не владел им.

Ответ автора: Умный указатель std::weak_ptr следует использовать, когда нужно иметь доступ к
ресурсу, которым управляет другой умный указатель std::shared_ptr, но продолжительности жизни этих
двух умных указателей не должны быть связаны между собой.

d) Умный указатель std::auto_ptr

Мой ответ: Умный указатель std::auto_ptr не следует использовать из-за его недостатков (некорректной
 работы с массивами).

Ответ автора: Умный указатель std::auto_ptr устарел, и его использования следует избегать.